server.port=8081

##  other-database
spring.datasource.main.url=jdbc:mysql://127.0.0.1:3306/order?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
spring.datasource.main.username=root
spring.datasource.main.password=123456
spring.datasource.main.driver-class-name=com.mysql.cj.jdbc.Driver


# sharding-datasources
# 定义数据源
spring.shardingsphere.datasource.names=ds1,ds2
# 配置数据源
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://127.0.0.1:3306/sharding_1?characterEncoding=utf-8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456

spring.shardingsphere.datasource.ds2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2.url=jdbc:mysql://127.0.0.1:3306/sharding_2?characterEncoding=utf-8
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=123456

# 配置默认的分库规则，如果没有单独指定，那么所有的逻辑表操作将根据默认的规则进行分库分表
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
# 自定义逻辑表分库分表配置
#spring.shardingsphere.sharding.tables.my_sharding.actual-data-nodes=ds$->{1..2}.my_sharding_$->{1..2}
#spring.shardingsphere.sharding.tables.my_sharding.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.my_sharding.table-strategy.inline.algorithm-expression=my_sharding_$->{order_id % 2 + 1}
#spring.shardingsphere.sharding.tables.my_sharding.keyGenerator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.my_sharding.keyGenerator.column=order_id

#spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{1..2}.t_order_item$->{1..2}
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}

# 显示sql
spring.shardingsphere.props.sql.show=true

seata.txServiceGroup=test_tx_group
