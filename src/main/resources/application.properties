server.port=8081

##  database
spring.datasource.main.url=jdbc:mysql://49.233.87.32:3306/order?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
spring.datasource.main.username=root
spring.datasource.main.password=yzsydm
spring.datasource.main.driver-class-name=com.mysql.cj.jdbc.Driver

# 定义数据源
spring.shardingsphere.datasource.names=ds0,ds1
# 配置数据源
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://49.233.87.32:3306/sharding_1?characterEncoding=utf-8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=yzsydm

spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://49.233.87.32:3306/sharding_2?characterEncoding=utf-8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=yzsydm

# 分库规则配置，行表达式
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
# 自定义逻辑表分库分表配置
spring.shardingsphere.sharding.tables.my_sharding.actual-data-nodes=ds$->{0..1}.my_sharding_$->{1..2}
spring.shardingsphere.sharding.tables.my_sharding.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.my_sharding.table-strategy.inline.algorithm-expression=my_sharding_$->{order_id % 2 + 1}
spring.shardingsphere.sharding.tables.my_sharding.keyGenerator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.my_sharding.keyGenerator.column=order_id
spring.shardingsphere.sharding.tables.

#spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item$->{0..1}
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}

# 系统属性，显示sql
spring.shardingsphere.props.sql.show=true

seata.txServiceGroup=test_tx_group
